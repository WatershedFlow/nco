$Header$ -*-text-*-

The netCDF Operators NCO version 4.9.3 have arrived.

http://nco.sf.net (Homepage, Mailing lists, Help)
http://github.com/nco (Source Code, Issues, Releases, Developers)

What's new?

Version 4.9.3 contains many regridding fixes and features: 
This version updates adds robustness to the NCO weight-generator
for PG2 grids, updates default options for TempestRemap, implements
a high frequency mode for the splitter, and fixes some issues with
ncremap, ncclimo, and ncrcat and works-around a backwards
incompatibility with the latest netCDF library, 4.7.4.

Work on NCO 4.9.4 has commenced and will improve NCO weight-generator  
accuracy, reduce vertical interpolation memory use, and supply more
accurate weight generation options for rectangular lat-lon grids.

Work on NCO 5.0.0 has commenced "under the hood". A key leap in that 
release will be support for netCDF4 user-defined types. Printing of
netCDF4 user-defined types ENUM and VLEN is ready now (though
unsupported) with the --udt flag. 5.0.0 will contain the finished
version of that, and include options for invoking mbtempest in place
of tempest. 

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. ncatted prints additional diagnostics when referenced attributes
   are not found. 
   http://nco.sf.net/nco.html#ncatted

B.  ncclimo adds a new clm_md='hf' type for splitting high-frequency 
   (hgh_frq) datasets. Currently these datasets must be daily means.
   http://nco.sf.net/nco.html#ncclimo
   
C. ncremap now automatically parallelizes the loading of data into
   KD-trees during regridding when OpenMP is available.
   This significantly improves weight-generation throughput.
   http://nco.sf.net/nco.html#ncremap

D. The ncks --frac_b_nrm and --area_wgt options both now automatically
   imply --chk_map.
   http://nco.sf.net/nco.html#chk_map

E. Options for TempestRemap have been updated to current guidance:
   No TR algorithms invoke the TR --volumetric option anymore.
   Many TR algorithms now add the TR  --correct_areas option.
   http://nco.sf.net/nco.html#tempest

F. ncremap's grid intersection algorithms are improved.
   In particular, "physics grids" (aka PG2 grids) intersections
   are now more robust for all resolutions in both directions
   up to ne1024.
   http://nco.sf.net/nco.html#ncremap

G. ncks accepts a new option --cell_area_quad which implements the
   TempestRemap quadrature algorithm instead of the NCO piecewise
   constant algorithm to compute cell areas. The TR algorithm often
   produces slight improved map statistics, though sometimes produces
   worse statistics. We are working to understand this better before
   deciding whether to adopt it as the default area algorithm.
   http://nco.sf.net/nco.html#ncks

H. ncks includes a workaround to the backwards incompatible changes
   to nc_inq_var_filter() inadvertently introduced in netCDF 4.7.4.
   Without this workaround, NCO may quit when printing files that 
   store results compressed with non-DEFLATE filters.
   http://nco.sf.net/nco.html#ncks

I. ncap2 eliminated an old and little-used custom correlation
   procedure that worked for data with missing values yet that ran
   afoul of the NCO's new BSD license. 
   http://nco.sf.net/nco.html#ncap2
      
J. The Users Guide now fully documents the ncremap and ncks options 
   chk_map, job_nbr, par_typ, SGS, unq_sfx.

K. Add --frac_b_nrm option to ncks map-checker
   http://nco.sf.net/nco.html#chk_map

BUG FIXES:

A. ncremap once again passes non-default regridding options to
   the NCO weight-generator in map-only mode. This appears to
   have been inadvertently broken in 4.9.2. The solution is to
   avoid 4.9.2.

B. ncclimo in splitter mode now correctly globs all files in a
   directory. Previsously, the globbing option to ncclimo was
   broken for the splitter. Thanks to Jill Zhang for reporting.
   The solution is to upgrade.

C. ncrcat once again re-bases time coordinates stored as integers.
   It lost that capability in an unknown but recent NCO release.
   The solution is to upgrade.

D. Curvilinear regional NCO grids that work with ESMF now work
   with the NCO weight generator.


Full release statement at http://nco.sf.net/ANNOUNCE

KNOWN PROBLEMS DUE TO NCO:

   This section of ANNOUNCE reports and reminds users of the
   existence and severity of known, not yet fixed, problems. 
   These problems occur with NCO 4.9.3 built/tested under
   MacOS 10.15.2 with netCDF 4.7.3 on HDF5 1.10.2 and with
   Linux with netCDF 4.7.4-development (20200102) on HDF5 1.8.19.

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   20190201: Possibly this problem was fixed in netCDF 4.6.2 by https://github.com/Unidata/netcdf-c/pull/1001
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride
   Workaround #3: Compile NCO with netCDF >= 4.6.2

B. NOT YET FIXED (netCDF4 library bug)
   Simultaneously renaming multiple dimensions in netCDF4 file can corrupt output

   Demonstration:
   ncrename -O -d lev,z -d lat,y -d lon,x ~/nco/data/in_grp.nc ~/foo.nc # Completes but produces unreadable file foo.nc
   ncks -v one ~/foo.nc

   20150922: Confirmed problem reported by Isabelle Dast, reported to Unidata
   20150924: Unidata confirmed problem
   20160212: Verified problem still exists in netCDF library
   20160512: Ditto
   20161028: Verified problem still exists with netCDF 4.4.1
   20170323: Verified problem still exists with netCDF 4.4.2-development
   20170323: https://github.com/Unidata/netcdf-c/issues/381
   20171102: Verified problem still exists with netCDF 4.5.1-development
   20171107: https://github.com/Unidata/netcdf-c/issues/597
   20190202: Progress has recently been made in netCDF 4.6.3-development
   More details: http://nco.sf.net/nco.html#ncrename_crd

C. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug tracking: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

B. Pre-built executables for many OS's at:
   http://nco.sf.net#bnr

